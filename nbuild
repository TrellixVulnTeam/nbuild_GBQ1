#!/usr/bin/env python3

import sys
import importlib
import os


def safe_call(bm, method_name, err_callback):
    try:
        getattr(bm, method_name)()
    except AttributeError as e:
        err_callback(e)


def main():
    module = importlib.import_module(sys.argv[1]
                                     .replace(".py", "")
                                     .replace("/", "."),
                                     package=".")
    bm = module.BuildManifest()
    if not os.path.exists("build"):
        os.makedirs("build")
    os.chdir("build")
    if not os.path.exists("{}-{}".format(bm.name, bm.version)):
        os.makedirs("{}-{}".format(bm.name, bm.version))
    os.chdir("{}-{}".format(bm.name, bm.version))

    print("Fetching...")
    bm.fetch()
    print("Unpacking...")
    safe_call(bm, "unpack", lambda err: None)
    print("Patching...")
    safe_call(bm, "patch", lambda err: None)
    print("Configuring...")
    safe_call(bm, "configure", lambda err: None)
    print("Compiling...")
    safe_call(bm, "compile", lambda err: None)
    print("Checking...")
    safe_call(bm, "check", lambda err: None)

    os.chdir("..")
    # shutil.rmtree("f{bm.name}-{bm.version}")


if __name__ == "__main__":
    main()
